# United States holiday definitions for the Ruby Holiday gem.
#
# Updated: 2008-11-24.
#
# Changed: 2017-06-15 to 2017-06-20
# - Add missing holiday information for a whole bunch of US states
# - Correct some existing holiday information
# - Add custom functions for Georgia’s State Holiday, Lee-Jackson Day and Election Day
# - Add custom functions for Rosh Hashanah and Yom Kippur with pre-defined dates from 2014 to 2020
# - Add missing tests and correct existing tests
# - Add helpful comments
# - Add a lot of used sources
#
# Common Sources:
# - http://en.wikipedia.org/wiki/Public_holidays_of_the_United_States
# - https://www.timeanddate.com/holidays/us/
# - https://publicholidays.us
# - https://en.wikipedia.org/wiki/List_of_U.S._state_abbreviations
# Sources about special state holidays:
# - https://en.wikipedia.org/wiki/Black_Friday_(shopping)#United_States
# - http://www.officeholidays.com/countries/usa/black_friday.php
# - https://publicholidays.us/christmas/
# - https://publicholidays.us/kansas/
# - https://publicholidays.us/Wisconsin/
# - https://publicholidays.us/Arkansas/
# - https://publicholidays.us/Georgia/
# - https://publicholidays.us/Maryland/
# - https://publicholidays.us/Nevada/
# - https://publicholidays.us/Ohio/
# - http://www.sos.ms.gov/education-publications/pages/state-holidays.aspx
# - http://www.leg.state.fl.us/Statutes/index.cfm?App_mode=Display_Statute&Search_String=&URL=0100-0199/0110/Sections/0110.117.html
# - https://en.wikipedia.org/wiki/Lee–Jackson_Day
# - http://www.statutes.legis.state.tx.us/Docs/GV/htm/GV.662.htm
# - https://en.wikipedia.org/wiki/Lincoln%27s_Birthday
# - https://en.wikipedia.org/wiki/Washington%27s_Birthday
# - https://en.wikipedia.org/wiki/Shrove_Tuesday
# - https://en.wikipedia.org/wiki/Town_meeting#Vermont
# - https://en.wikipedia.org/wiki/Casimir_Pulaski_Day
# - https://en.wikipedia.org/wiki/Seward%27s_Day
# - https://en.wikipedia.org/wiki/Emancipation_Day
# - https://en.wikipedia.org/wiki/Patriots%27_Day
# - https://georgia.gov/popular-topic/observing-state-holidays
# - https://en.wikipedia.org/wiki/Confederate_Memorial_Day
# - http://www.admin.sc.gov/humanresources/employee-information/benefits-and-leave/holiday-leave
# - http://louisiana.gov/Government/For_State_Employees/
# - http://www.leg.state.fl.us/statutes/index.cfm?App_mode=Display_Statute&Search_String=&URL=0600-0699/0683/Sections/0683.01.html
# - http://dhrd.hawaii.gov/state-observed-holidays/
# - https://www.timeanddate.com/holidays/us/kamehameha-day
# - http://www.mass.gov/anf/employment-equal-access-disability/hr-policies/legal-holiday-calendar.html
# - http://www.edd.ca.gov/payroll_taxes/Legal_Holidays.htm
# - https://en.wikipedia.org/wiki/Emancipation_Day#United_States
# - http://www.visuperiorcourt.org/about/holidays.aspx
# - http://www.personnel.wv.gov/employees/benefits/Pages/Holidays.aspx
# - https://www.timeanddate.com/holidays/us/pioneer-day
# - http://sos.ri.gov/divisions/Civics-And-Education/ri-state-holidays
# - http://humanresources.vermont.gov/benefits-wellness/holiday-schedule
# - http://doa.alaska.gov/dop/fileadmin/socc/pdf/bkgrnd_socc10.pdf
# - https://en.wikipedia.org/wiki/Election_Day_(United_States)
# - https://www.timeanddate.com/holidays/us/yom-kippur
# - https://www.timeanddate.com/holidays/us/rosh-hashana
# - http://www.when-is.com/rosh-hashanah-2014.asp
# - https://de.wikipedia.org/wiki/Jom_Kippur#Jom_Kippur-Termine
# - https://de.wikipedia.org/wiki/Rosch_ha-Schana#Zeitpunkt_und_Einbettung_in_den_j.C3.BCdischen_Kalender
# - https://als.wikipedia.org/wiki/Rosch_ha-Schana
# - http://www.kleiner-kalender.de/event/rosch-ha-schana/0651c.html
# - http://www.kaldix.com/united-states/calendar/virginia/holidays/independence-day/year-2017/
# - https://publicholidays.us/independence-day/
---
months:
  0:
  - name: Shrove Tuesday
    regions: [us_fl]
    function: easter(year)
    function_modifier: -47
  - name: Mardi Gras Day
    regions: [us_la]
    function: easter(year)
    function_modifier: -47
  - name: Good Friday # informal in general
    regions: [us]
    function: easter(year)
    function_modifier: -2
    type: informal
  - name: Good Friday # public holiday in the following states
    regions: [us_ct, us_de, us_gu, us_hi, us_in, us_ky, us_la, us_nj, us_nc, us_nd, us_pr, us_tn]
    function: easter(year)
    function_modifier: -2
  - name: Easter Sunday
    regions: [us]
    function: easter(year)
    type: informal
  1:
  - name: New Year's Day
    regions: [us]
    mday: 1
    observed: to_weekday_if_weekend(date)
  - name: Martin Luther King's and Robert E. Lee's Birthdays # renamed Martin Luther King, Jr. Day
    regions: [us_ms]
    week: 3
    wday: 1
  - name: Idaho Human Rights Day # renamed Martin Luther King, Jr. Day
    regions: [us_id]
    week: 3
    wday: 1
  - name: Civil Rights Day # renamed Martin Luther King, Jr. Day
    regions: [us_ar]
    week: 3
    wday: 1
  - name: Martin Luther King, Jr. Day # Third Monday in January
    regions: [us]
    week: 3
    wday: 1
  - name: Inauguration Day
    function: us_inauguration_day(year)
    regions: [us_tx, us_dc, us_la, us_md, us_va]
  - name: Lee-Jackson Day
    regions: [us_va]
    function: lee_jackson_day(year, month)
  - name: Confederate Heroes Day # fixed
    regions: [us_tx]
    mday: 19
  2:
  - name: Presidents' Day # Note: Several states are using another name for this holiday, there are 12 notations for it
    week: 3
    regions: [us]
    wday: 1
  3:
  - name: Casimir Pulaski Day # First Monday in March
    regions: [us_il]
    week: 1
    wday: 1
  - name: Town Meeting Day # First Tuesday in March
    regions: [us_vt]
    week: 1
    wday: 2
  - name: Texas Independence Day # fixed
    regions: [us_tx]
    mday: 2
  - name: Prince Jonah Kuhio Kalanianaole Day
    regions: [us_hi]
    observed: to_weekday_if_weekend(date)
    mday: 26
  - name: Seward's Day # Last Monday in March
    regions: [us_ak]
    week: -1
    wday: 1
  - name: César Chávez Day # fixed
    regions: [us_ca]
    mday: 31
  4:
  - name: Emancipation Day
    regions: [us_dc, us_ca]
    observed: to_weekday_if_weekend(date)
    mday: 16
  - name: Patriots' Day # Third Monday in April
    regions: [us_me, us_ma]
    week: 3
    wday: 1
  - name: San Jacinto Day # fixed
    regions: [us_tx]
    mday: 21
  - name: Confederate Memorial Day # Last Monday in April
    regions: [us_al, us_ms]
    week: -1
    wday: 1
  - name: Confederate Memorial Day
    regions: [us_fl]
    mday: 26
    observed: to_monday_if_sunday(date)
  - name: State Holiday # April 20 or April 26
    regions: [us_ga]
    function: georgia_state_holiday(year, month)
  - name: Arbor Day # fixed
    regions: [us_ne]
    mday: 28
  5:
  - name: Truman Day # fixed
    regions: [us_mo]
    mday: 8
  - name: Confederate Memorial Day # fixed
    regions: [us_sc]
    mday: 10
  - name: Memorial Day # Note: full name in Mississippi is National Memorial Day/Jefferson Davis' Birthday
    regions: [us]
    week: -1
    wday: 1
  6:
  - name: Jefferson Davis' Birthday # First Monday in June
    regions: [us_al]
    week: 1
    wday: 1
  - name: Birthday of Jefferson Davis # fixed
    regions: [us_fl]
    mday: 3
  - name: King Kamehameha I Day
    regions: [us_hi]
    observed: to_weekday_if_weekend(date)
    mday: 11
  - name: Emancipation Day in Texas # fixed
    regions: [us_tx]
    mday: 19
  - name: West Virginia Day
    regions: [us_wv]
    mday: 20
    observed: to_weekday_if_weekend(date)
  7:
  - name: Emancipation Day # fixed
    regions: [us_vi]
    mday: 3
  - name: Independence Day # fixed
    regions: [us]
    mday: 4
  - name: Independence Day (Holiday)
    regions: [us_va]
    mday: 4
    function: to_weekday_if_weekend(date) # Note: Always if Independence Day don't match
  - name: Pioneer Day # fixed
    regions: [us_ut]
    mday: 24
  8:
  - name: Victory Day # Second Monday in August
    regions: [us_ri]
    week: 2
    wday: 1
  - name: Bennington Battle Day
    regions: [us_vt]
    mday: 16
    observed: to_weekday_if_weekend(date)
  - name: Statehood Day # Third Friday in August
    regions: [us_hi]
    week: 3
    wday: 5
  - name: Lyndon Baines Johnson Day # fixed
    regions: [us_tx]
    mday: 27
  9:
  - name: Labor Day
    week: 1
    regions: [us]
    wday: 1
  - name: Rosh Hashanah
    regions: [us_tx]
    function: rosh_hashanah(year)
  - name: Yom Kippur
    regions: [us_tx]
    function: yom_kippur(year)
  10:
  - name: Columbus Day
    week: 2
    regions: [us_al, us_az, us_co, us_ct, us_dc, us_ga, us_id, us_il, us_in, us_ma, us_md, us_me, us_mo, us_mt, us_ne, us_nj, us_nm, us_ny, us_oh, us_pa, us_ri, us_ut, us_va, us_wv]
    wday: 1
  - name: Columbus Day
    week: 2
    regions: [us_ak, us_ar, us_ca, us_de, us_fl, us_hi, us_mi, us_mn, us_nd, us_nv, us_or, us_sd, us_tx, us_vt, us_wa, us_wi, us_wy]
    type: informal
    wday: 1
  - name: Alaska Day # fixed
    regions: [us_ak]
    mday: 18
  - name: Nevada Day # Last Friday in October
    regions: [us_nv]
    week: -1
    wday: 5
  11:
  - name: Election Day
    regions: [us_de, us_hi, us_il, us_in, us_mt, us_nj, us_ny, us_pa, us_ri]
    function: election_day(year)
  - name: Veterans Day
    regions: [us]
    mday: 11
    observed: to_weekday_if_weekend(date)
  - name: Thanksgiving
    regions: [us]
    week: 4
    wday: 4
  - name: Family Day
    function: day_after_thanksgiving(year)
    regions: [us_nv]
  - name: State Holiday
    function: day_after_thanksgiving(year)
    regions: [us_ga]
  - name: Presidents' Day
    function: day_after_thanksgiving(year)
    regions: [us_nm]
  - name: Lincoln's Birthday
    function: day_after_thanksgiving(year)
    regions: [us_in]
  - name: American Indian Heritage Day
    function: day_after_thanksgiving(year)
    regions: [us_md]
  - name: Day after Thanksgiving (Black Friday)
    function: day_after_thanksgiving(year)
    regions: [us_ca, us_de, us_fl, us_ia, us_il, us_ks, us_ky, us_me, us_mi, us_mn, us_ms, us_ne, us_nh, us_nc, us_pa, us_sc, us_ok, us_tn, us_tx, us_va, us_wa, us_wv]
  12:
  - name: Christmas Eve
    regions: [us_ar, us_mi, us_nc, us_sc, us_tx, us_wi]
    mday: 24
  - name: Christmas Eve (Holiday) # Note: Always if Christmas Eve don't match
    regions: [us_mi, us_sc, us_va]
    mday: 24
    function: to_weekday_if_weekend(date)
  - name: Christmas Day
    regions: [us]
    mday: 25
    observed: to_weekday_if_weekend(date)
  - name: Day after Christmas
    regions: [us_ar, us_nc, us_ok, us_sc, us_tn, us_tx]
    mday: 26
  - name: New Year's Eve
    regions: [us_mi, us_wi]
    mday: 31
methods:
  rosh_hashanah:
    arguments: year
    source: |
      rosh_hashanah_dates = {
          '2014' => Date.civil(2014, 9, 25),
          '2015' => Date.civil(2015, 9, 14),
          '2016' => Date.civil(2016, 10, 3),
          '2017' => Date.civil(2017, 9, 21),
          '2018' => Date.civil(2018, 9, 10),
          '2019' => Date.civil(2019, 9, 30),
          '2020' => Date.civil(2020, 9, 19)
      }
      rosh_hashanah_dates[year.to_s]
  yom_kippur:
    arguments: year
    source: |
      yom_kippur_dates = {
          '2014' => Date.civil(2014, 10, 4),
          '2015' => Date.civil(2015, 9, 23),
          '2016' => Date.civil(2016, 10, 12),
          '2017' => Date.civil(2017, 9, 30),
          '2018' => Date.civil(2018, 9, 19),
          '2019' => Date.civil(2019, 10, 9),
          '2020' => Date.civil(2020, 9, 28)
      }
      yom_kippur_dates[year.to_s]
  georgia_state_holiday:
    # Monday before that holiday
    arguments: year, month
    source: |
      beginning_of_month = Date.civil(year, month, 1)
      state_holiday = Date.civil(year, month, 26)
      state_holiday.downto(beginning_of_month).find {|date| date if date.wday == 1 }
  lee_jackson_day:
    # Friday before Martin Luther King, Jr. Day
    arguments: year, month
    source: |
      day_of_holiday = Holidays::Factory::DateCalculator.day_of_month_calculator.call(year, month, 3, 1)
      beginning_of_month = Date.civil(year, month, 1)
      king_day = Date.civil(year, month, day_of_holiday)
      king_day.downto(beginning_of_month).find {|date| date if date.wday == 5 }
  election_day:
    # Tuesday after the first Monday of November
    arguments: year
    source: |
       Holidays::Factory::DateCalculator.day_of_month_calculator.call(year, 11, 1, 1) + 1
  us_inauguration_day:
    # January 20, every fourth year, following Presidential election
    arguments: year
    source: |
      year % 4 == 1 ? 20 : nil
  day_after_thanksgiving:
    arguments: year
    source: |
      Holidays::Factory::DateCalculator.day_of_month_calculator.call(year, 11, 4, 4) + 1
tests: |
    [Date.civil(2017, 2, 28), Date.civil(2018, 2, 13), Date.civil(2019, 3, 5)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Shrove Tuesday', Holidays.on(date, [:us_fl])[0][:name]
      assert_equal 'Mardi Gras Day', Holidays.on(date, [:us_la])[0][:name]
    end
    states_good_friday = %i{us_ct us_de us_gu us_hi us_in us_ky us_la us_nj us_nc us_nd us_pr us_tn}
    [Date.civil(2017, 4, 14), Date.civil(2018, 3, 30), Date.civil(2019, 4, 19)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Good Friday', Holidays.on(date, :us, :informal)[0][:name]
      assert_equal 'Good Friday', Holidays.on(date, states_good_friday)[0][:name]
    end
    [Date.civil(2017, 4, 16), Date.civil(2018, 4, 1), Date.civil(2019, 4, 21)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Easter Sunday', Holidays.on(date, :us, :informal)[0][:name]
    end

    assert_equal "New Year's Day", Holidays.on(Date.civil(2017, 1, 1), [:us])[0][:name]
    assert_equal "New Year's Day", Holidays.on(Date.civil(2017, 1, 2), :observed, [:us])[0][:name]

    [Date.civil(2017, 1, 16), Date.civil(2018, 1, 15), Date.civil(2019, 1, 21)].each do |date|
      assert_equal 'Martin Luther King, Jr. Day', Holidays.on(date, [:us])[0][:name]
    end
    [Date.civil(2016, 1, 18), Date.civil(2017, 1, 16), Date.civil(2018, 1, 15)].each do |date|
      assert_equal 'Martin Luther King, Jr. Day', Holidays.on(date, [:us])[0][:name]
      assert_equal "Martin Luther King's and Robert E. Lee's Birthdays", Holidays.on(date, [:us_ms])[0][:name]
    end
    [Date.civil(2016, 1, 18), Date.civil(2017, 1, 16), Date.civil(2018, 1, 15)].each do |date|
      assert_equal 'Martin Luther King, Jr. Day', Holidays.on(date, [:us])[0][:name]
      assert_equal 'Idaho Human Rights Day', Holidays.on(date, [:us_id])[0][:name]
    end
    [Date.civil(2016, 1, 18), Date.civil(2017, 1, 16), Date.civil(2018, 1, 15)].each do |date|
      assert_equal 'Martin Luther King, Jr. Day', Holidays.on(date, [:us])[0][:name]
      assert_equal 'Civil Rights Day', Holidays.on(date, [:us_ar])[0][:name]
    end

    states_inauguration = %i{us_tx us_dc us_la us_md us_va}
    [Date.civil(2017, 1, 20), Date.civil(2021, 1, 20)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Inauguration Day', Holidays.on(date, states_inauguration)[0][:name]
    end
    assert_equal 'Inauguration Day', Holidays.on(Date.civil(2025, 1, 20), states_inauguration)[1][:name]

    [Date.civil(2017, 1, 13), Date.civil(2018, 1, 12), Date.civil(2019, 1, 18)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Lee-Jackson Day', Holidays.on(date, [:us_va])[0][:name]
    end

    assert_equal 'Confederate Heroes Day', Holidays.on(Date.civil(2017, 1, 19), [:us_tx])[0][:name]

    [Date.civil(2008, 2, 18), Date.civil(2017, 2, 20), Date.civil(2018, 2, 19)].each do |date|
      assert_equal "Presidents' Day", Holidays.on(date, [:us])[0][:name]
    end
    [Date.civil(2017, 3, 6), Date.civil(2018, 3, 5), Date.civil(2019, 3, 4)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Casimir Pulaski Day', Holidays.on(date, [:us_il])[0][:name]
    end
    [Date.civil(2017, 3, 7), Date.civil(2018, 3, 6), Date.civil(2019, 3, 5)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Town Meeting Day', Holidays.on(date, [:us_vt])[0][:name]
    end

    assert_equal 'Texas Independence Day', Holidays.on(Date.civil(2017, 3, 2), [:us_tx])[0][:name]

    [Date.civil(2017, 3, 27), Date.civil(2018, 3, 26), Date.civil(2022, 3, 25)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Prince Jonah Kuhio Kalanianaole Day', Holidays.on(date, [:us_hi], :observed)[0][:name]
    end
    assert_equal [], Holidays.on(Date.civil(2017, 3, 26), [:us])
    assert_equal 'Prince Jonah Kuhio Kalanianaole Day', Holidays.on(Date.civil(2017, 3, 26), [:us_hi])[0][:name]

    [Date.civil(2017, 3, 27), Date.civil(2018, 3, 26), Date.civil(2019, 3, 25)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal "Seward's Day", Holidays.on(date, [:us_ak])[0][:name]
    end

    assert_equal 'César Chávez Day', Holidays.on(Date.civil(2017, 3, 31), [:us_ca])[0][:name]

    [Date.civil(2023, 4, 17), Date.civil(2022, 4, 15), Date.civil(2028, 4, 17)].each do |date|
      assert_equal 'Emancipation Day', Holidays.on(date, [:us_dc, :us_ca], :observed)[0][:name]
    end
    assert_equal 'Emancipation Day', Holidays.on(Date.civil(2017, 4, 16), [:us_dc, :us_ca])[0][:name]

    [Date.civil(2017, 4, 17), Date.civil(2018, 4, 16), Date.civil(2019, 4, 15)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal "Patriots' Day", Holidays.on(date, [:us_me, :us_ma])[0][:name]
    end

    assert_equal 'San Jacinto Day', Holidays.on(Date.civil(2017, 4, 21), [:us_tx])[0][:name]

    [Date.civil(2017, 4, 24), Date.civil(2018, 4, 30), Date.civil(2019, 4, 29)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Confederate Memorial Day', Holidays.on(date, [:us_al, :us_ms])[0][:name]
    end
    [Date.civil(2015, 4, 27), Date.civil(2020, 4, 27), Date.civil(2026, 4, 27)].each do |date|
      assert_equal [], Holidays.on(Date.civil(2020, 4, 27), [:us])
      assert_equal 'Confederate Memorial Day', Holidays.on(Date.civil(2020, 4, 27), [:us_fl], :observed)[0][:name]
    end
    assert_equal [], Holidays.on(Date.civil(2017, 4, 26), [:us])
    assert_equal 'Confederate Memorial Day', Holidays.on(Date.civil(2017, 4, 26), [:us_fl])[0][:name]

    [Date.civil(2015, 4, 20), Date.civil(2021, 4, 26)].each do |date|
      assert_equal [], Holidays.on(Date.civil(2015, 4, 20), [:us])
      assert_equal 'State Holiday', Holidays.on(date, [:us_ga])[0][:name]
    end

    assert_equal 'Arbor Day', Holidays.on(Date.civil(2017, 4, 28), [:us_ne])[0][:name]
    assert_equal 'Truman Day', Holidays.on(Date.civil(2017, 5, 8), [:us_mo])[0][:name]
    assert_equal 'Confederate Memorial Day', Holidays.on(Date.civil(2017, 5, 10), [:us_sc])[0][:name]

    [Date.civil(2017, 5, 29), Date.civil(2018, 5, 28), Date.civil(2019, 5, 27)].each do |date|
      assert_equal 'Memorial Day', Holidays.on(date, [:us])[0][:name]
    end

    [Date.civil(2017, 6, 5), Date.civil(2018, 6, 4), Date.civil(2019, 6, 3)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal "Jefferson Davis' Birthday", Holidays.on(date, [:us_al])[0][:name]
    end
    assert_equal 'Birthday of Jefferson Davis', Holidays.on(Date.civil(2017, 6, 3), [:us_fl])[0][:name]

    [Date.civil(2017, 6, 12), Date.civil(2018, 6, 11), Date.civil(2022, 6, 10)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'King Kamehameha I Day', Holidays.on(date, [:us_hi], :observed)[0][:name]
    end
    assert_equal [], Holidays.on(Date.civil(2017, 6, 11), [:us])
    assert_equal 'King Kamehameha I Day', Holidays.on(Date.civil(2017, 6, 11), [:us_hi])[0][:name]

    assert_equal 'Emancipation Day in Texas', Holidays.on(Date.civil(2017, 6, 19), [:us_tx])[0][:name]

    [Date.civil(2017, 6, 20), Date.civil(2020, 6, 19), Date.civil(2021, 6, 21)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'West Virginia Day', Holidays.on(date, [:us_wv], :observed)[0][:name]
    end
    assert_equal [], Holidays.on(Date.civil(2017, 6, 20), [:us])
    assert_equal 'West Virginia Day', Holidays.on(Date.civil(2017, 6, 20), [:us_wv])[0][:name]

    assert_equal 'Emancipation Day', Holidays.on(Date.civil(2017, 7, 3), [:us_vi])[0][:name]

    [Date.civil(2020, 7, 4), Date.civil(2021, 7, 4), Date.civil(2026, 7, 4)].each do |date|
      assert_equal 'Independence Day', Holidays.on(date, [:us])[0][:name]
      assert_equal 'Independence Day', Holidays.on(date, [:us_va])[0][:name]
    end
    [Date.civil(2020, 7, 3), Date.civil(2021, 7, 5), Date.civil(2026, 7, 3)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Independence Day (Holiday)', Holidays.on(date, [:us_va])[0][:name]
    end

    assert_equal 'Pioneer Day', Holidays.on(Date.civil(2017, 7, 24), [:us_ut])[0][:name]

    [Date.civil(2017, 8, 14), Date.civil(2020, 8, 10), Date.civil(2021, 8, 9)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Victory Day', Holidays.on(date, [:us_ri])[0][:name]
    end

    [Date.civil(2017, 8, 16), Date.civil(2020, 8, 17), Date.civil(2025, 8, 15)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Bennington Battle Day', Holidays.on(date, [:us_vt], :observed)[0][:name]
    end
    assert_equal [], Holidays.on(Date.civil(2017, 8, 16), [:us])
    assert_equal 'Bennington Battle Day', Holidays.on(Date.civil(2017, 8, 16), [:us_vt])[0][:name]

    [Date.civil(2017, 8, 18), Date.civil(2020, 8, 21), Date.civil(2025, 8, 15)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Statehood Day', Holidays.on(date, [:us_hi])[0][:name]
    end

    assert_equal 'Lyndon Baines Johnson Day', Holidays.on(Date.civil(2017, 8, 27), [:us_tx])[0][:name]

    [Date.civil(2017, 9, 4), Date.civil(2018, 9, 3), Date.civil(2019, 9, 2)].each do |date|
      assert_equal 'Labor Day', Holidays.on(date, [:us])[0][:name]
    end
    [Date.civil(2017, 9, 21), Date.civil(2018, 9, 10), Date.civil(2019, 9, 30)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Rosh Hashanah', Holidays.on(date, [:us_tx])[0][:name]
    end
    [Date.civil(2017, 9, 30), Date.civil(2018, 9, 19), Date.civil(2019, 10, 9)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Yom Kippur', Holidays.on(date, [:us_tx])[0][:name]
    end

    states_columbus_day_formal =
      %i{us_al us_az us_co us_ct us_dc us_ga us_id us_il us_in us_ma us_md us_me us_mo us_mt us_ne
         us_nj us_nm us_ny us_oh us_pa us_ri us_ut us_va us_wv}
    states_columbus_day_informal =
      %i{us_ak us_ar us_ca us_de us_fl us_hi us_mi us_mn us_nd us_nv us_or us_sd us_tx us_vt us_wa us_wi us_wy}

    [Date.civil(2017, 10, 9), Date.civil(2018, 10, 8), Date.civil(2019, 10, 14)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal [], Holidays.on(date, states_columbus_day_informal)
      assert_equal 'Columbus Day', Holidays.on(date, states_columbus_day_formal)[0][:name]
      assert_equal 'Columbus Day', Holidays.on(date, states_columbus_day_informal, :informal)[0][:name]
    end

    assert_equal 'Alaska Day', Holidays.on(Date.civil(2017, 10, 18), [:us_ak])[0][:name]

    [Date.civil(2017, 10, 27), Date.civil(2018, 10, 26), Date.civil(2019, 10, 25)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Nevada Day', Holidays.on(date, :us_nv)[0][:name]
    end

    states_election_day = %i{us_de us_hi us_il us_in us_mt us_nj us_ny us_pa us_ri}
    [Date.civil(2017, 11, 7), Date.civil(2018, 11, 6), Date.civil(2021, 11, 2)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Election Day', Holidays.on(date, states_election_day)[0][:name]
    end

    [Date.civil(2017, 11, 10), Date.civil(2018, 11, 12), Date.civil(2019, 11, 11)].each do |date|
      assert_equal 'Veterans Day', Holidays.on(date, [:us], :observed)[0][:name]
    end
    assert_equal 'Veterans Day', Holidays.on(Date.civil(2017, 11, 11), [:us])[0][:name]

    [Date.civil(2017, 11, 23), Date.civil(2018, 11, 22), Date.civil(2019, 11, 28)].each do |date|
      assert_equal 'Thanksgiving', Holidays.on(date, [:us])[0][:name]
    end

    states_black_friday =
      %i{us_ca us_de us_fl us_ia us_il us_ks us_ky us_me us_mi us_mn us_ms us_ne us_nh us_nc us_pa
         us_sc us_ok us_tn us_tx us_va us_wa us_wv}

    [Date.civil(2017, 11, 24), Date.civil(2018, 11, 23), Date.civil(2019, 11, 29)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Family Day', Holidays.on(date, [:us_nv])[0][:name]
      assert_equal 'State Holiday', Holidays.on(date, [:us_ga])[0][:name]
      assert_equal "Presidents' Day", Holidays.on(date, [:us_nm])[0][:name]
      assert_equal "Lincoln's Birthday", Holidays.on(date, [:us_in])[0][:name]
      assert_equal 'American Indian Heritage Day', Holidays.on(date, [:us_md])[0][:name]
      assert_equal 'Day after Thanksgiving (Black Friday)', Holidays.on(date, states_black_friday)[0][:name]
    end

    states_xmas_eve = %i{us_ar us_mi us_nc us_sc us_tx us_wi}
    states_xmas_eve_holiday = %i{us_mi us_sc us_va}
    [Date.civil(2022, 12, 23), Date.civil(2023, 12, 25), Date.civil(2028, 12, 25)].each do |date|
      assert_equal 'Christmas Eve (Holiday)', Holidays.on(date, states_xmas_eve_holiday)[0][:name]
    end
    assert_equal 'Christmas Eve', Holidays.on(Date.civil(2017, 12, 24), states_xmas_eve)[0][:name]
    assert_equal 'Christmas Eve', Holidays.on(Date.civil(2017, 12, 24), states_xmas_eve_holiday)[0][:name]

    [Date.civil(2021, 12, 24), Date.civil(2022, 12, 26), Date.civil(2027, 12, 24)].each do |date|
      assert_equal [], Holidays.on(date, [:us])
      assert_equal 'Christmas Day', Holidays.on(date, [:us], :observed)[0][:name]
    end
    assert_equal 'Christmas Day', Holidays.on(Date.civil(2017, 12, 25), [:us])[0][:name]

    states_day_after_christmas = %i{us_ar us_nc us_ok us_sc us_tn us_tx}
    assert_equal 'Day after Christmas', Holidays.on(Date.civil(2017, 12, 26), states_day_after_christmas)[0][:name]

    assert_equal "New Year's Eve", Holidays.on(Date.civil(2017, 12, 31), [:us_mi, :us_wi])[0][:name]
